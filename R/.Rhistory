knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, tidymodels,glmnet, plotly,
vip, paletteer,car, ggplot2,gt,dplyr,viridis, arsenal)
data<-read_csv(here::here("Cleaned Data", "Gene_Expression.csv"))
data
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, tidymodels,glmnet, plotly,
vip, paletteer,car, ggplot2,gt,dplyr,viridis, arsenal)
data<-read_csv(here::here("Cleaned Data", "Gene_Expression.csv"))
data
skimr::skim_without_charts(data)
data |> ggplot(aes(x=Gene_Expression)) + geom_histogram() + ggtitle("Gene Expression")
#We can see there is a value of -99 which has been entered incorrectly - we will set this to NA
data <- data |> filter(Gene_Expression>0)
five<- fivenum(data$Gene_Expression)
data |> ggplot(aes(x=Gene_Expression)) +
geom_histogram(fill="mediumaquamarine", col="black") +
ggtitle("Gene Expression") +
geom_vline(aes(xintercept=mean(Gene_Expression)),col="darkblue",linetype="dashed",size=1)  +
scale_color_brewer(palette="Dark2") +
geom_vline(aes(xintercept=five[1]),col="darkorange3",linetype="dashed",size=1) +
geom_vline(aes(xintercept=five[2]),col="darkorange3",linetype="dashed",size=1) +
geom_vline(aes(xintercept=five[3]),col="darkorange3",linetype="dashed",size=1) +
geom_vline(aes(xintercept=five[4]),col="darkorange3",linetype="dashed",size=1) +
geom_vline(aes(xintercept=five[5]),col="darkorange3",linetype="dashed",size=1)
class(data$Cell_Line)
table(data$Cell_Line)
class(data$Concentration)
table(data$Concentration)
class(data$Treatment)
table(data$Treatment)
data |> ggplot(aes(x=Gene_Expression, fill=Treatment)) +
geom_dotplot(dotsize=1.2) +
scale_fill_manual(values=c("Placebo" = "deepskyblue1",
"Activating Factor 42"="magenta1")) +
ggtitle("Dot Plot of Gene Expression coloured by Treatment")
data |> ggplot(aes(x=Gene_Expression, fill=Cell_Line)) +
geom_dotplot(dotsize=1.2) +
scale_fill_manual(values=c("Wild Type" = "springgreen3",
"Cell Type 101"="darkorchid2")) +
ggtitle("Dot Plot of Gene Expression coloured by Cell Line")
sum <- data |> group_by(Cell_Line) |> summarize(min=fivenum(Gene_Expression)[1],
Q1=fivenum(Gene_Expression)[2],
Med=fivenum(Gene_Expression)[3],
Q3=fivenum(Gene_Expression)[4],
max=fivenum(Gene_Expression)[5])
sum
sum2 <- data |> group_by(Treatment) |> summarize(min=fivenum(Gene_Expression)[1],
Q1=fivenum(Gene_Expression)[2],
Med=fivenum(Gene_Expression)[3],
Q3=fivenum(Gene_Expression)[4],
max=fivenum(Gene_Expression)[5])
sum2
data |> ggplot(aes(x=Treatment, y=Gene_Expression,fill=Cell_Line)) +
geom_boxplot() +
scale_fill_manual(values=c("Wild Type" = "springgreen3",
"Cell Type 101"="darkorchid2")) + ggtitle("Gene Expression vs Treatment")
data |> ggplot(aes(x=Cell_Line, y=Gene_Expression,fill=Treatment)) +
geom_boxplot() +
scale_fill_manual(values=c("Placebo" = "deepskyblue1",
"Activating Factor 42"="magenta1")) +
ggtitle("Gene Expression vs Cell Line")
sum3 <- data |> group_by(Treatment,Cell_Line) |> summarize(min=fivenum(Gene_Expression)[1],
Q1=fivenum(Gene_Expression)[2],
Med=fivenum(Gene_Expression)[3],
Q3=fivenum(Gene_Expression)[4],
max=fivenum(Gene_Expression)[5])
sum3
data |> ggplot(aes(x=Concentration, y=Gene_Expression, col=Treatment)) +
geom_point(line="black") + geom_smooth() +
scale_colour_manual(values=c("Placebo" = "deepskyblue1",
"Activating Factor 42"="magenta1")) +
ggtitle("Gene Expression vs Concentration Coloured By Treatment")
data |> ggplot(aes(x=Concentration, y=Gene_Expression, col=Cell_Line)) +
geom_point() +
scale_colour_manual(values=c("Wild Type" = "springgreen3",
"Cell Type 101"="darkorchid2")) +ggtitle("Gene Expression vs Concentration Coloured By Cell Line")
data |> ggplot(aes(x=Concentration, y=Gene_Expression, col=`Cell Line_Treatment`)) +
geom_point() + geom_smooth(method=lm) +
ggtitle("Gene Expression vs Concentration Coloured By Cell Line Concatenated with Treatment") +
scale_colour_manual(values=c("Wild TypeActivating Factor 42"="dodgerblue2",
"Cell Type 101Activating Factor 42"="slategray",
"Wild TypePlacebo"="darkmagenta",
"Cell Type 101Placebo"="firebrick2"))
Cell1<-data |>
group_by(Cell_Line) |>
summarise(Mean=mean(Gene_Expression), SD=sd(Gene_Expression))
gt_data1<-
gt(Cell1) |>
tab_header(title="Table 1: Mean of Gene Expression for each Cell Line")
gt_data1 |>
cols_label(Cell_Line="Cell Line",Mean="Mean", SD="Standard Deviation")
Treat1<-data |>
group_by(Treatment) |>
summarise(Mean=mean(Gene_Expression), SD=sd(Gene_Expression))
gt_data2<-
gt(Treat1) |>
tab_header(title="Table 2: Mean of Gene Expression for each Treatment")
gt_data2 |>
cols_label(Mean="Mean", SD="Standard Deviation")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, tidymodels,glmnet, plotly,
vip, paletteer,car, ggplot2,gt,dplyr,viridis,showtext,patchwork, ggrepel)
#install.packages("patchwork")
#library("patchwork")
data<-read_csv(here::here("Cleaned Data", "Gene_Expression.csv"))
data
data <- data |> filter(Gene_Expression>0)
library(showtext)
font_add(
family="times",
regular=here::here("figs","Times New Roman.ttf")
)
showtext_auto()
#par(mfrow=c(1,2)) #Set the plotting area into a 1*2 array
data1 <- data |> filter(Cell_Line == "Wild Type")
plot1<-data1 |> ggplot(aes(x=Concentration, y=Gene_Expression,col=Treatment)) +
geom_point(aes(fill=Treatment),color="black", size=3, shape=21) +
ggtitle("Wild-type") +
xlab("µg/ml") +
ylab("Gene Expression") +
theme(legend.position="bottom", legend.key=element_rect(fill="white")) +
scale_fill_manual(values=c("#77a8d2", "#d5bf98")) +
scale_x_continuous(breaks = c(0,1,2,3,4,5,6,7,8,9,10), limits = c(0, 11)) +
geom_label(label="JZC",
x=10.5,
y=42,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="fUg",
x=10.5,
y=36,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="CsE",
x=10.5,
y=14,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
geom_label(label="bNo",
x=10.5,
y=8,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
theme(
text=element_text(family="times")
)
data2 <- data |> filter(Cell_Line == "Cell Type 101")
plot2<-data2 |> ggplot(aes(x=Concentration, y=Gene_Expression, col=Treatment)) +
geom_point(aes(fill=Treatment), color="black", size=3, shape=21) +
ggtitle("Cell-type 101") +
xlab("µg/ml") +
ylab("Gene Expression") +
theme(legend.position="bottom", legend.key=element_rect(fill="white")) +
scale_fill_manual(values=c("#77a8d2", "#d5bf98")) +
scale_x_continuous(breaks = c(0,1,2,3,4,5,6,7,8,9,10), limits = c(0, 11)) +
scale_y_continuous(breaks = c(10,20,30,40,50), limits = c(0, 50)) +
geom_label(label="xpo",
x=10.7,
y=48,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="Rza",
x=10.7,
y=34,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="Hoe",
x=10.7,
y=26,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
geom_label(label="jEK",
x=10.7,
y=20,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
theme(
text=element_text(family="times")
)
plot1 + plot2 + plot_layout(guides="collect") & theme(legend.position="bottom", legend.key=element_rect(fill="white"))
showtext_auto(FALSE)
data2 <- data |> filter(Cell_Line == "Cell Type 101")
showtext_auto()
data2 |> ggplot(aes(x=Concentration, y=Gene_Expression, col=Treatment)) +
geom_point(aes(fill=Treatment), color="black", size=3, shape=21) +
ggtitle("Cell-type 101") +
xlab("µg/ml") +
ylab("Gene Expression") +
theme(legend.position="bottom", legend.key=element_rect(fill="white")) +
scale_fill_manual(values=c("#77a8d2", "#d5bf98")) +
scale_x_continuous(breaks = c(0,1,2,3,4,5,6,7,8,9,10), limits = c(0, 11)) +
scale_y_continuous(breaks = c(10,20,30,40,50), limits = c(0, 50)) +
geom_label(label="xpo",
x=10.5,
y=48,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="Rza",
x=10.5,
y=34,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="Hoe",
x=10.5,
y=26,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
geom_label(label="jEK",
x=10.5,
y=20,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
theme(
text=element_text(family="times")
)
showtext_auto(FALSE)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, tidymodels, lme4, lmerTest, readr, gt)
#install.packages("lme4")
#install.packages("sjPlot")
#install.packages("lmer.test")
#library("lme4")
#library("sjPlot")
data<-read_csv(here::here("Cleaned Data", "Gene_Expression.csv"))
#data <- data |> select(Cell_Line, Concentration, Treatment,Gene_Expression)
data <- data |> filter(Gene_Expression>0)
data
model1<-lmer(Gene_Expression ~ Concentration + Cell_Line + Treatment + (1|`Gene Line`), data=data)
plot(model1)
ranova(model1) #This shows we need this intercept term
anova(model1) #This shows the triple interaction is significant thus we choose this model
gt(ranova(model1)) |>
cols_hide(colums=c(npar, logLik, AIC, LRT, Df))
