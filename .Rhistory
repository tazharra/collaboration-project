family="times",
regular=here::here("figs","Times New Roman.ttf")
)
showtext_auto()
#par(mfrow=c(1,2)) #Set the plotting area into a 1*2 array
data1 <- data |> filter(Cell_Line == "Wild Type")
plot1<-data1 |> ggplot(aes(x=Concentration, y=Gene_Expression,col=Treatment)) +
geom_point(aes(fill=Treatment),color="black", size=3, shape=21) +
ggtitle("Wild-type") +
xlab("µg/ml") +
ylab("Gene Expression") +
theme(legend.position="bottom", legend.key=element_rect(fill="white")) +
scale_fill_manual(values=c("#77a8d2", "#d5bf98")) +
scale_x_continuous(breaks = c(0,1,2,3,4,5,6,7,8,9,10), limits = c(0, 11)) +
geom_label(label="JZC",
x=10.5,
y=42,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="fUg",
x=10.5,
y=36,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="CsE",
x=10.5,
y=14,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
geom_label(label="bNo",
x=10.5,
y=8,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
theme(
text=element_text(family="times")
)
data2 <- data |> filter(Cell_Line == "Cell Type 101")
plot2<-data2 |> ggplot(aes(x=Concentration, y=Gene_Expression, col=Treatment)) +
geom_point(aes(fill=Treatment), color="black", size=3, shape=21) +
ggtitle("Cell-type 101") +
xlab("µg/ml") +
ylab("Gene Expression") +
theme(legend.position="bottom", legend.key=element_rect(fill="white")) +
scale_fill_manual(values=c("#77a8d2", "#d5bf98")) +
scale_x_continuous(breaks = c(0,1,2,3,4,5,6,7,8,9,10), limits = c(0, 11)) +
scale_y_continuous(breaks = c(10,20,30,40,50), limits = c(0, 50)) +
geom_label(label="xpo",
x=10.7,
y=48,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="Rza",
x=10.7,
y=34,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="Hoe",
x=10.7,
y=26,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
geom_label(label="jEK",
x=10.7,
y=20,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
theme(
text=element_text(family="times")
)
plot1 + plot2 + plot_layout(guides="collect") & theme(legend.position="bottom", legend.key=element_rect(fill="white"))
showtext_auto(FALSE)
model1<-lmer(Gene_Expression ~ Concentration + Cell_Line + Treatment + (1|`Gene Line`), data=data)
plot(model1, main="Plot of Residual vs Fitted for Model 1", xlab="fitted values", ylab="residuals")
model2<-lmer(Gene_Expression ~ Concentration * Cell_Line * Treatment + (1|`Gene Line`), data=data)
#ranef(model2)
mod2rf<-as_tibble(ranef(model2))
mod2rf <- mod2rf |> select(grp,condval)
gt(mod2rf) |>
tab_header(title = "Table 1: Coefficients of Random Effects for each Gene Line") |>
cols_label(grp="Gene Line", condval="Coefficents")
#fixef(model2)
mod2ff <-as_tibble(fixef(model2))
mod2ff <- mod2ff |> mutate(variable=c("Intercept",
"Concentration",
"Cell_LineWild Type",
"TreatmentPlacebo",
"Concentration:Cell_LineWildType",
"Concentration:TreatmentPlacebo",
"CellLineWild Type: TreatmentPlacebo",
"Concentration:Cell_LineWildType:TreatmentPlacebo"))
mod2ff <- mod2ff |>  relocate(variable)
gt(mod2ff) |>
tab_header(title="Table 2: Coefficent of Fixed Effect Terms in Model 2") |>
cols_label(value="Coefficient Value", variable="Term in Model") |>
tab_caption(caption=md("Coefficents of the Fixed Effects Effects with 3 way interaction between concentration, cell line and treatment and random effect: gene line"))
data |> mutate(my_model = predict(model2)) |>
ggplot(aes(x=Concentration, y=Gene_Expression, col=`Gene Line`)) + geom_point() +
geom_line(aes(x=Concentration, y=my_model))
data |> ggplot(aes(x=Concentration, y=Gene_Expression)) +
geom_point() +
geom_line(aes(x=Concentration, y=my_model))
data |> mutate(my_model = predict(model2)) |>
ggplot(aes(x=Concentration, y=Gene_Expression, col=`Gene Line`)) + geom_point() +
geom_line(aes(x=Concentration, y=my_model))
data |> ggplot(aes(x=Concentration, y=Gene_Expression)) +
geom_point() +
geom_line(aes(x=Concentration, y=my_model)) +
facet_wrap(~`Gene Line`)
data |> mutate(my_model = predict(model2)) |>
ggplot(aes(x=Concentration, y=Gene_Expression, col=`Gene Line`)) + geom_point() +
geom_line(aes(x=Concentration, y=my_model))
data |> ggplot(aes(x=Concentration, y=Gene_Expression)) +
geom_point() +
facet_wrap(~`Gene Line`)
data |> ggplot(aes(x=Concentration, y=Gene_Expression, col=`Gene Line`)) +
geom_point() +
facet_wrap(~`Gene Line`)
data |> ggplot(aes(x=Concentration, y=Gene_Expression, col=`Gene Line`)) +
geom_point() +
facet_wrap(~`Gene Line`) +
geom_line(aes(x=Concentration, y=my_model))
data |> mutate(my_model = predict(model2)) |>
ggplot(aes(x=Concentration, y=Gene_Expression, col=`Gene Line`)) + geom_point() +
geom_line(aes(x=Concentration, y=my_model))
data |> mutate(my_model = predict(model2)) |>
ggplot(aes(x=Concentration, y=Gene_Expression, col=`Gene Line`)) +
geom_point() +
facet_wrap(~`Gene Line`) +
geom_line(aes(x=Concentration, y=my_model))
knitr::opts_chunk$set(echo = TRUE)
ranova(model2) #This shows we need this intercept term
anova(model2) #This shows the triple interaction is significant thus we choose this model
summary(model2)
rsq(model2)
knitr::opts_chunk$set(echo = TRUE)
data<-read_csv(here::here("raw-data", "Gene_Expression.csv"))
pacman::p_load(tidyverse, tidymodels, lme4, lmerTest, readr, gt)
pacman::p_load(tidyverse, tidymodels,glmnet, plotly,
vip, paletteer,car, ggplot2,gt,dplyr,viridis,showtext,patchwork, ggrepel)
data<-read_csv(here::here("raw-data", "Gene_Expression.csv"))
#data <- data |> select(Cell_Line, concentration, treatment,gene_expression)
data <- data |> filter(Gene_Expression>0)
data
library(showtext)
font_add(
family="times",
regular=here::here("figs","Times New Roman.ttf")
)
showtext_auto()
#par(mfrow=c(1,2)) #Set the plotting area into a 1*2 array
data1 <- data |> filter(Cell_Line == "Wild Type")
plot1<-data1 |> ggplot(aes(x=Concentration, y=Gene_Gxpression,col=Treatment)) +
geom_point(aes(fill=Treatment),color="black", size=3, shape=21) +
ggtitle("Wild-type") +
xlab("µg/ml") +
ylab("Gene Expression") +
theme(legend.position="bottom", legend.key=element_rect(fill="white")) +
scale_fill_manual(values=c("#77a8d2", "#d5bf98")) +
scale_x_continuous(breaks = c(0,1,2,3,4,5,6,7,8,9,10), limits = c(0, 11)) +
geom_label(label="JZC",
x=10.5,
y=42,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="fUg",
x=10.5,
y=36,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="CsE",
x=10.5,
y=14,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
geom_label(label="bNo",
x=10.5,
y=8,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
theme(
text=element_text(family="times")
)
data2 <- data |> filter(Cell_Line == "Cell Type 101")
plot2<-data2 |> ggplot(aes(x=Concentration, y=Gene_Expression, col=Treatment)) +
geom_point(aes(fill=Treatment), color="black", size=3, shape=21) +
ggtitle("Cell-type 101") +
xlab("µg/ml") +
ylab("Gene Expression") +
theme(legend.position="bottom", legend.key=element_rect(fill="white")) +
scale_fill_manual(values=c("#77a8d2", "#d5bf98")) +
scale_x_continuous(breaks = c(0,1,2,3,4,5,6,7,8,9,10), limits = c(0, 11)) +
scale_y_continuous(breaks = c(10,20,30,40,50), limits = c(0, 50)) +
geom_label(label="xpo",
x=10.7,
y=48,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="Rza",
x=10.7,
y=34,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="Hoe",
x=10.7,
y=26,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
geom_label(label="jEK",
x=10.7,
y=20,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
theme(
text=element_text(family="times")
)
plot1 + plot2 + plot_layout(guides="collect") & theme(legend.position="bottom", legend.key=element_rect(fill="white"))
library(showtext)
font_add(
family="times",
regular=here::here("figs","Times New Roman.ttf")
)
showtext_auto()
#par(mfrow=c(1,2)) #Set the plotting area into a 1*2 array
data1 <- data |> filter(Cell_Line == "Wild Type")
plot1<-data1 |> ggplot(aes(x=Concentration, y=Gene_Expression,col=Treatment)) +
geom_point(aes(fill=Treatment),color="black", size=3, shape=21) +
ggtitle("Wild-type") +
xlab("µg/ml") +
ylab("Gene Expression") +
theme(legend.position="bottom", legend.key=element_rect(fill="white")) +
scale_fill_manual(values=c("#77a8d2", "#d5bf98")) +
scale_x_continuous(breaks = c(0,1,2,3,4,5,6,7,8,9,10), limits = c(0, 11)) +
geom_label(label="JZC",
x=10.5,
y=42,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="fUg",
x=10.5,
y=36,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="CsE",
x=10.5,
y=14,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
geom_label(label="bNo",
x=10.5,
y=8,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
theme(
text=element_text(family="times")
)
data2 <- data |> filter(Cell_Line == "Cell Type 101")
plot2<-data2 |> ggplot(aes(x=Concentration, y=Gene_Expression, col=Treatment)) +
geom_point(aes(fill=Treatment), color="black", size=3, shape=21) +
ggtitle("Cell-type 101") +
xlab("µg/ml") +
ylab("Gene Expression") +
theme(legend.position="bottom", legend.key=element_rect(fill="white")) +
scale_fill_manual(values=c("#77a8d2", "#d5bf98")) +
scale_x_continuous(breaks = c(0,1,2,3,4,5,6,7,8,9,10), limits = c(0, 11)) +
scale_y_continuous(breaks = c(10,20,30,40,50), limits = c(0, 50)) +
geom_label(label="xpo",
x=10.7,
y=48,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="Rza",
x=10.7,
y=34,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="Hoe",
x=10.7,
y=26,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
geom_label(label="jEK",
x=10.7,
y=20,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
theme(
text=element_text(family="times")
)
plot1 + plot2 + plot_layout(guides="collect") & theme(legend.position="bottom", legend.key=element_rect(fill="white"))
showtext_auto(FALSE)
model2<-lmer(Gene_Expression ~ Concentration * Cell_Line * Treatment + (1|`Gene Line`), data=data)
#ranef(model2)
mod2rf<-as_tibble(ranef(model2))
mod2rf <- mod2rf |> select(grp,condval)
gt(mod2rf) |>
tab_header(title = "Table 1: Coefficients of Random Effects for each gene line") |>
cols_label(grp="gene line", condval="Coefficents")
#fixef(model2)
mod2ff <-as_tibble(fixef(model2))
mod2ff <- mod2ff |> mutate(variable=c("Intercept",
"concentration",
"Cell_LineWild Type",
"treatmentPlacebo",
"concentration:Cell_LineWildType",
"concentration:treatmentPlacebo",
"CellLineWild Type: treatmentPlacebo",
"concentration:Cell_LineWildType:treatmentPlacebo"))
mod2ff <- mod2ff |>  relocate(variable)
gt(mod2ff) |>
tab_header(title="Table 2: Coefficent of Fixed Effect Terms in Model 2") |>
cols_label(value="Coefficient Value", variable="Term in Model") |>
tab_caption(caption=md("Coefficents of the Fixed Effects Effects with 3 way interaction between concentration, cell line and treatment and random effect: gene line"))
data |> mutate(my_model = predict(model2)) |>
ggplot(aes(x=Concentration, y=Gene_Expression, col=`Gene Line`)) + geom_point() +
geom_line(aes(x=Concentration, y=my_model))
data |> mutate(my_model = predict(model2)) |>
ggplot(aes(x=Concentration, y=Gene_Expression, col=`Gene Line`)) +
geom_point() +
facet_wrap(~`Gene Line`) +
geom_line(aes(x=Concentration, y=my_model))
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse,pwr)
power<-0.9
alpha<-0.05
R2<-0.1
#Effect size, strength of relationship between variables
effect_size<-R2/(1-R2)
#Degrees of freedom = Number of predictor variables.
#Note when looking at predictors with multiple levels, the reference level
#is not counted.
num_pred<-5
pwr.f2.test(u=num_pred, f2=effect_size, sig.level=alpha, power=power)
#Note: the output, v, is the denominator degrees of freedom rather than sample
#size, so we need to add on the total number of variables (num_pred+1)
sample_size<-round(147.8645)+num_pred+1
sample_size
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, tidymodels, lme4, lmerTest, readr, gt)
pacman::p_load(tidyverse, tidymodels,glmnet, plotly,
vip, paletteer,car, ggplot2,gt,dplyr,viridis,showtext,patchwork, ggrepel)
data<-read_csv(here::here("raw-data", "Gene_Expression.csv"))
#data <- data |> select(Cell_Line, concentration, treatment,gene_expression)
data <- data |> filter(Gene_Expression>0)
library(showtext)
font_add(
family="times",
regular=here::here("figs","Times New Roman.ttf")
)
showtext_auto()
#par(mfrow=c(1,2)) #Set the plotting area into a 1*2 array
data1 <- data |> filter(Cell_Line == "Wild Type")
plot1<-data1 |> ggplot(aes(x=Concentration, y=Gene_Expression,col=Treatment)) +
geom_point(aes(fill=Treatment),color="black", size=3, shape=21) +
ggtitle("Wild-type") +
xlab("µg/ml") +
ylab("Gene Expression") +
theme(legend.position="bottom", legend.key=element_rect(fill="white")) +
scale_fill_manual(values=c("#77a8d2", "#d5bf98")) +
scale_x_continuous(breaks = c(0,1,2,3,4,5,6,7,8,9,10), limits = c(0, 11)) +
geom_label(label="JZC",
x=10.5,
y=42,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="fUg",
x=10.5,
y=36,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="CsE",
x=10.5,
y=14,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
geom_label(label="bNo",
x=10.5,
y=8,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
theme(
text=element_text(family="times")
)
data2 <- data |> filter(Cell_Line == "Cell Type 101")
plot2<-data2 |> ggplot(aes(x=Concentration, y=Gene_Expression, col=Treatment)) +
geom_point(aes(fill=Treatment), color="black", size=3, shape=21) +
ggtitle("Cell-type 101") +
xlab("µg/ml") +
ylab("Gene Expression") +
theme(legend.position="bottom", legend.key=element_rect(fill="white")) +
scale_fill_manual(values=c("#77a8d2", "#d5bf98")) +
scale_x_continuous(breaks = c(0,1,2,3,4,5,6,7,8,9,10), limits = c(0, 11)) +
scale_y_continuous(breaks = c(10,20,30,40,50), limits = c(0, 50)) +
geom_label(label="xpo",
x=10.7,
y=48,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="Rza",
x=10.7,
y=34,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#77a8d2") +
geom_label(label="Hoe",
x=10.7,
y=26,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
geom_label(label="jEK",
x=10.7,
y=20,
label.padding = unit(0.35, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="#d5bf98") +
theme(
text=element_text(family="times")
)
plot1 + plot2 + plot_layout(guides="collect") & theme(legend.position="bottom", legend.key=element_rect(fill="white"))
showtext_auto(FALSE)
model1<-lmer(Gene_Expression ~ Concentration + Cell_Line + Treatment + (1|`Gene Line`), data=data)
plot(model1, main="Plot of Residual vs Fitted for Model 1", xlab="fitted values", ylab="residuals")
model2<-lmer(Gene_Expression ~ Concentration * Cell_Line * Treatment + (1|`Gene Line`), data=data)
#ranef(model2)
mod2rf<-as_tibble(ranef(model2))
mod2rf <- mod2rf |> select(grp,condval)
gt(mod2rf) |>
tab_header(title = "Table 1: Coefficients of Random Effects for each gene line") |>
cols_label(grp="gene line", condval="Coefficents")
#fixef(model2)
mod2ff <-as_tibble(fixef(model2))
mod2ff <- mod2ff |> mutate(variable=c("Intercept",
"concentration",
"Cell_LineWild Type",
"treatmentPlacebo",
"concentration:Cell_LineWildType",
"concentration:treatmentPlacebo",
"CellLineWild Type: treatmentPlacebo",
"concentration:Cell_LineWildType:treatmentPlacebo"))
mod2ff <- mod2ff |>  relocate(variable)
gt(mod2ff) |>
tab_header(title="Table 2: Coefficent of Fixed Effect Terms in Model 2") |>
cols_label(value="Coefficient Value", variable="Term in Model") |>
tab_caption(caption=md("Coefficents of the Fixed Effects Effects with 3 way interaction between concentration, cell line and treatment and random effect: gene line"))
```default
#| echo: false
2 * 2
which git
git config--list
1+1
